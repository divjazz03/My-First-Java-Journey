S - Single Responsibility Principle
O - Open/Closed Principle
L - Liskov substitution principle
I - Interface segregation principle
D - Dependency Inversion Principle


Single Responsibility Principle : A class should have only one reason to change.

Open/Closed Principle: Software entities (classes, modules, function, etc) should be open for extension, but closed for modification.

Liskov Substitution Principle : Objects in a program should be replaceable with instances of their subtypes without altering the correctness of the program.

Interface Segregation Principle : No client should be forced to depend on methods it does not use;

Dependency Inversion Principle : 1 High-level modules should not depend on low-level modules. Both should depend on abstractions;

                                2 Abstractions should not depend on details. Details should depend on abstractions;